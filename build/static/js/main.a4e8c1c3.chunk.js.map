{"version":3,"sources":["components/slider.jsx","App.js","reportWebVitals.js","index.js"],"names":["slideWidth","Slider","props","useState","left","setLeft","auto","over","setOver","numOfSlides","slides","length","currentPage","setCurrentPage","hendlerNext","prev","loop","useEffect","interval","setInterval","delay","clearInterval","map","slide","index","className","src","img","alt","text","nanoid","pagination","i","elem","onClick","push","onPointerOver","onPointerOut","style","navs","pags","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAKMA,EAAa,IAEJ,SAASC,EAAOC,GAC7B,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,mBAASD,EAAMI,MAAvC,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAcP,EAAMQ,OAAOC,OAEjC,EAAsCR,mBAASC,EAAOJ,EAAa,GAAnE,mBAAOY,EAAP,KAAoBC,EAApB,KAWA,SAASC,IACPT,GAAQ,SAACU,GACP,OAAIA,EAAOf,GAAcS,EAAc,GAC9BM,EAAOf,EAEZE,EAAMc,KACD,EAEAhB,GAAcS,EAAc,MAKzCQ,qBAAU,WACR,GAAIV,EAAM,CACR,IAAMW,EAAWC,aAAY,WAC3BL,MACe,IAAdZ,EAAMkB,OACT,OAAO,kBAAMC,cAAcH,OAE5B,CAAChB,EAAMkB,MAAOb,IAEjBU,qBAAU,WACRJ,EAAeT,EAAOJ,EAAa,KAClC,CAACI,IAeJ,IAbA,IAAMM,EAASR,EAAMQ,OAAOY,KAAI,SAACC,EAAOC,GACtC,OACE,sBAAoBC,UAAU,eAA9B,UACE,qBAAKA,UAAU,WAAf,SACE,qBAAKC,IAAKH,EAAMI,IAAKC,IAAKJ,MAE5B,qBAAKC,UAAU,WAAf,SAA2BF,EAAMM,SAJzBC,kBASRC,EAAa,GArDiB,WAuD3BC,GACP,IAAIC,EACF,qBAEER,UAAWO,IAAMpB,EAAc,qBAAuB,UACtDsB,QAAS,WACP7B,EAAQL,GAAcgC,EAAI,KAJ9B,SAOGA,GANIF,eASTC,EAAWI,KAAKF,IAZTD,EAAI,EAAGA,GAAKvB,EAAauB,IAAM,EAA/BA,GAeT,OACE,qCACE,sBACEP,UAAU,UACVW,cAAe,WACb5B,GAAQ,IAEV6B,aAAc,WACZ7B,GAAQ,IANZ,UASE,qBAAKiB,UAAU,SAASa,MAAO,CAAElC,MAAOA,GAAxC,SACGM,IAEFR,EAAMqC,MACL,wBAAQd,UAAU,cAAcS,QA9ExC,WACE7B,GAAQ,SAACU,GACP,OAAIA,GAAQ,EACHf,GAAcS,EAAc,GAE9BM,EAAOf,MAyEV,kBAIDE,EAAMqC,MACL,wBAAQd,UAAU,cAAcS,QAASpB,EAAzC,kBAIF,sBAAKW,UAAU,WAAf,UACGb,EADH,IACiBH,QAGlBP,EAAMsC,MAAQ,qBAAKf,UAAU,aAAf,SAA6BM,OCtGlD,IAAMrB,EAAS,CACb,CACEiB,IAAK,sDACLE,KAAM,kBAER,CACEF,IAAK,oDACLE,KAAM,kBAER,CACEF,IAAK,yDACLE,KAAM,mBAiBKY,MAbf,WACE,OACE,cAACxC,EAAD,CACES,OAAQA,EACRM,MAAM,EACNuB,MAAM,EACNC,MAAM,EACNlC,MAAM,EACNc,MAAO,KCdEsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a4e8c1c3.chunk.js","sourcesContent":["import { nanoid } from \"nanoid\";\r\nimport \"./null_styles.css\";\r\nimport \"./slider.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst slideWidth = 600;\r\n\r\nexport default function Slider(props) {\r\n  const [left, setLeft] = useState(0);\r\n  const [over, setOver] = useState(props.auto);\r\n  const numOfSlides = props.slides.length;\r\n  // const sliderWidth = slideWidth * numOfSlides;\r\n  const [currentPage, setCurrentPage] = useState(left / slideWidth + 1);\r\n\r\n  function hendlerPrev() {\r\n    setLeft((prev) => {\r\n      if (prev <= 0) {\r\n        return slideWidth * (numOfSlides - 1);\r\n      }\r\n      return prev - slideWidth;\r\n    });\r\n  }\r\n\r\n  function hendlerNext() {\r\n    setLeft((prev) => {\r\n      if (prev < slideWidth * (numOfSlides - 1)) {\r\n        return prev + slideWidth;\r\n      }\r\n      if (props.loop) {\r\n        return 0;\r\n      } else {\r\n        return slideWidth * (numOfSlides - 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (over) {\r\n      const interval = setInterval(() => {\r\n        hendlerNext();\r\n      }, props.delay * 1000);\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [props.delay, over]);\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(left / slideWidth + 1);\r\n  }, [left]);\r\n\r\n  const slides = props.slides.map((slide, index) => {\r\n    return (\r\n      <div key={nanoid()} className=\"slideWrapper\">\r\n        <div className=\"slideImg\">\r\n          <img src={slide.img} alt={index}></img>\r\n        </div>\r\n        <div className=\"slideTxt\">{slide.text}</div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  const pagination = [];\r\n\r\n  for (let i = 1; i <= numOfSlides; i++) {\r\n    let elem = (\r\n      <div\r\n        key={nanoid()}\r\n        className={i === currentPage ? \"pageBtn activePage\" : \"pageBtn\"}\r\n        onClick={() => {\r\n          setLeft(slideWidth * (i - 1));\r\n        }}\r\n      >\r\n        {i}\r\n      </div>\r\n    );\r\n    pagination.push(elem);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"wrapper\"\r\n        onPointerOver={() => {\r\n          setOver(false);\r\n        }}\r\n        onPointerOut={() => {\r\n          setOver(true);\r\n        }}\r\n      >\r\n        <div className=\"slider\" style={{ left: -left }}>\r\n          {slides}\r\n        </div>\r\n        {props.navs && (\r\n          <button className=\"arrows prev\" onClick={hendlerPrev}>\r\n            Prev\r\n          </button>\r\n        )}\r\n        {props.navs && (\r\n          <button className=\"arrows next\" onClick={hendlerNext}>\r\n            Next\r\n          </button>\r\n        )}\r\n        <div className=\"currPage\">\r\n          {currentPage}/{numOfSlides}\r\n        </div>\r\n      </div>\r\n      {props.pags && <div className=\"pagination\">{pagination}</div>}\r\n    </>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport Slider from \"./components/slider\";\n\nconst slides = [\n  {\n    img: \"https://www.w3schools.com/howto/img_nature_wide.jpg\",\n    text: \"Caption Text 1\",\n  },\n  {\n    img: \"https://www.w3schools.com/howto/img_snow_wide.jpg\",\n    text: \"Caption Text 2\",\n  },\n  {\n    img: \"https://www.w3schools.com/howto/img_mountains_wide.jpg\",\n    text: \"Caption Text 3\",\n  },\n];\n\nfunction App() {\n  return (\n    <Slider\n      slides={slides}\n      loop={true}\n      navs={true}\n      pags={true}\n      auto={true}\n      delay={3}\n    ></Slider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}